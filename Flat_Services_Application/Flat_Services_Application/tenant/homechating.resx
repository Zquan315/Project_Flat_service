<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>